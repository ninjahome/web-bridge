class TweetContentToPost{constructor(t,e,s,a,i,c){this.text=t,this.text_list=e,this.create_time=s,this.web3_id=a,this.twitter_id=i}}class MemCachedTweets{constructor(){this.latestID=0,this.moreOldTweets=!0,this.isLoading=!1,this.CachedItem=[]}canLoadMoreOldData(){return this.moreOldTweets&&!this.isLoading}}const dbKeyCachedVoteContractMeta="__db_key_cached_vote_contract_meta__";class TweetVoteContractSetting{constructor(t,e,s,a,i,c,o,r){this.postPrice=t,this.votePrice=e,this.votePriceInEth=s,this.maxVote=a,this.pluginAddr=i,this.pluginStop=c,this.kolRate=o,this.feeRate=r}static sycToDb(t){setItemWithTimestamp(TweetVoteContractSetting.DBKey(),JSON.stringify(t))}static DBKey(){return dbKeyCachedVoteContractMeta}static async load(){const t=await getItemWithTimestamp(TweetVoteContractSetting.DBKey());return t?JSON.parse(t):null}}class GameBasicInfo{constructor(t,e,s,a,i,c){this.curRound=t,this.totalBonus=e,this.ticketNo=s,this.curBonus=a,this.dTime=i,this.bonusForPoint=c}}const TXStatus=Object.freeze({NoPay:0,Pending:1,Success:2,Failed:3,Str(t){switch(t){case this.NoPay:return"not paid";case this.Pending:return"pending";case this.Success:return"success";case this.Failed:return"failed";default:return"unknown"}}}),TweetDetailSource=Object.freeze({NoNeed:"0",HomePage:"1",MyVoted:"2",MostVoted:"3",MostTeam:"4"});class TweetQueryParam{constructor(t,e,s,a){this.start_id=t,this.web3_id=e,this.voted_ids=s,this.hash_arr=a}}const dbKeyCachedRawImg="__db_key_cached_tweet_raw_img__";class ImageRawData{constructor(t,e,s){this.hash=t,this.raw_data=e,this.thumb_nail=s}static sycToDb(t){setItemWithTimestamp(ImageRawData.DBKey(t.hash),JSON.stringify(t))}static DBKey(t){return dbKeyCachedRawImg+t}static async load(t){const e=await getItemWithTimestamp(ImageRawData.DBKey(t));return e?JSON.parse(e):null}}